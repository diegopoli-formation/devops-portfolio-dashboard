name: Continuous Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  IMAGE_NAME: devops-portfolio-dashboard
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build & push frontend
    - name: Build and push frontend
      working-directory: ./frontend
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-frontend:${{ env.IMAGE_TAG }} .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-frontend:${{ env.IMAGE_TAG }}

    # Build & push backend
    - name: Build and push backend
      working-directory: ./backend
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-backend:${{ env.IMAGE_TAG }} .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-backend:${{ env.IMAGE_TAG }}

    - name: Deploy to production server
      run: |
        echo "Déploiement en production..."
        # Exemple : connexion SSH + déploiement
        # ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<EOF
        #   cd /chemin/projet
        #   docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-frontend:${{ env.IMAGE_TAG }}
        #   docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}-backend:${{ env.IMAGE_TAG }}
        #   docker-compose up -d
        # EOF

    - name: Notify success
      if: success()
      run: echo "✅ Déploiement réussi !"

    - name: Notify failure
      if: failure()
      run: echo "❌ Échec du déploiement."
